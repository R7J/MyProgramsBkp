#!/usr/bin/python
import socket
import sys
MAX_CLIENTS=5    #Change as per requirement
try:
    if len(sys.argv)-2 > MAX_CLIENTS or len(sys.argv)<3:
        print "\n\tUsage: "+sys.argv[0]+ " Local_Ip " \
            + " client_ips(Min: 1 Max: "+str(MAX_CLIENTS)+")\n"
        sys.exit(1)
    for i in range(1,len(sys.argv)):                    #Validate IPv4 addresses
        try:
            socket.inet_pton(socket.AF_INET,sys.argv[i])
        except socket.error:
            print "\tInvalid IPv4 address "+sys.argv[i]
            sys.exit(1)
    try: 
        csock=socket.socket(socket.AF_INET,socket.SOCK_DGRAM)
    except socket.error, msg:
        print "Failed to Create CSocket ["+str(msg[0])+"] "+msg[1]
        sys.exit(1)
    try:
        ssock=socket.socket(socket.AF_INET,socket.SOCK_DGRAM)
    except socket.error, msg:
        print "Failed to Create SSocket ["+str(msg[0])+"] "+msg[1]
        sys.exit(1)
    client_addr=("",6053)
    server_addr=(sys.argv[1],6054)
    csock.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)
    ssock.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)
    try:
        csock.bind(client_addr)
    except socket.error, msg:
        print "Clinetside Bind Failed ["+str(msg[0])+"] "+msg[1]
        sys.exit(1)
    try:
        ssock.bind(server_addr)
    except socket.error, msg:
        print "Serverside Bind Failed ["+str(msg[0])+"] "+msg[1]
        sys.exit(1)
    while True:
        data=csock.recvfrom(246)                            #Receive from TC
        if data[0]:
            for i in range(2,len(sys.argv)):
                ssock.sendto(data[0],(sys.argv[i],6053))    #Send to all clients
except KeyboardInterrupt:
    print ""
    sys.exit(0)
